 Lets create Binary Search Tree
 1.	Using insertion (BinarySearchTree will be created)
 2.	Using preorder and inorder
 3.	Using postorder and inorder
 Option: 1
 Enter 0 to stop inserting
 :25
 :15
 :35
 :10
 :20
 :30
 :3 40
 :0
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 2
 Preorder
 : 25 15 10 20 35 30 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 3
 Inorder
 : 10 15 20 25 30 35 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 4
 Postordere
 : 10 20 15 30 40 35 25
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 5
 Levelorder
 : 25 15 35 10 20 30 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 6
 No of nodes : 7
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 7
 Height of Tree : 3
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 8
 Data to search : 35
 Found at 0x55f859d6e6d0
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 9
 Minimum value in tree : 10
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 10
 Maximum value in tree : 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 11
 Data to delete : 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 3
 Inorder
 : 10 15 20 25 30 35
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 1
 data to insert : 40

 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 3
 Inorder
 : 10 15 20 25 30 35 40
 0.	Exit
 1.	Insert
 2.	Preorder
 3.	Inorder
 4.	Postorder
 5.	Levelorder
 6.	No of nodes
 7.	Height of tree
 8.	Search
 9.	Minimum value in Tree
 10.	Maximum value in Tree
 11.	Delete
 Option: 0
